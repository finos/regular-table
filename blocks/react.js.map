{"version":3,"sources":["react.md"],"names":[],"mappings":"AAgBC,SAAA,YAAA,QAAA,oCAAA;;AAEA,SAAA,eAAA,CAAA,KAAA,EAAA;AACA,EAAA,KAAA,CAAA,eAAA,CAAA,YAAA,CAAA,IAAA,EAAA,EAAA,CAAA;AACA,EAAA,KAAA,CAAA,IAAA;AACA;;AAEA,MAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,MAAA;AACA,QAAA,OAAA,GAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAAA,CAAA;AAGA,EAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,MAAA,CAAA,IAAA;AACA,CALA","sourcesContent":["# React\n\nAn example of using [`regular-table`](https://github.com/finos/regular-table)\nwith React, which is incredibly easy because `<regular-table>` is a Web\nComponent.  There is a `#root` element:\n\n```html\n<div id=\"root\"></div>\n```\n\n... and a simple `render()` which uses a `Ref` to capture the `<regular-table>`\nand call `setDataListener()`.  `regular-table` is not particualrly expensive to\ninitialize, but it does retain some state between calls that makes it even more\nperformant, so it is worth trying to prevente React from re-rendering it.\n\n```javascript\nimport {dataListener} from \"/dist/examples/two_billion_rows.js\";\n\nfunction setRegularTable(table) {\n    table.setDataListener(dataListener(1000, 50));\n    table.draw();\n}\n\nwindow.addEventListener(\"load\", () => {\n    const element = window.React.createElement(\"regular-table\", {\n        ref: setRegularTable,\n    });\n    window.ReactDOM.render(element, window.root);\n});\n```\n\n## Styling\n\nGrey is drab.\n\n```css\ntd {\n    color: #1078d1;\n}\n```\n\n## Appendix (Dependencies)\n\nThe usual suspects.\n\n```html\n<script src=\"/dist/umd/regular-table.js\"></script>\n<link rel='stylesheet' href=\"/dist/css/material.css\">\n```\n\nThis example also requires React.\n\n```html\n<script src=\"/node_modules/react/dist/react.js\"></script>\n<script src=\"/node_modules/react-dom/dist/react-dom.js\"></script>\n```\n\n"]}