{"version":3,"sources":["perspective.md"],"names":[],"mappings":"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","sourcesContent":["## Perspective\n\nAn example of a multi-dimensional pivot table using [`regular-table`](https://github.com/finos/regular-table)\nand [`perspective`](https://perspective.finos.org/).\n\n```html\n<regular-table></regular-table>\n```\n\n## `addStyleListener()` Styles\n\nColumn header styles, including styling for sort indicators.  A Column, in\nPerspctive vocabulary, refers to the last level of `column_headers`, and\nPerspective's `to_columns()` method will always generate these, even if no\ncolumn Pivots were defined in the construction of the rendered `View()`.\n\n```javascript\nfunction columnHeaderStyleListener(regularTable) {\n    const header_depth = regularTable._view_cache.config.row_pivots.length - 1;\n    for (const td of regularTable.querySelectorAll(\"thead tr:last-child th\")) {\n        const metadata = regularTable.getMeta(td);\n        const sort = this._config.sort.find(\n            (x) =>\n                x[0] ===\n                metadata.column_header[metadata.column_header.length - 1]\n        );\n        let needs_border = metadata.row_header_x === header_depth;\n        needs_border =\n            needs_border ||\n            (metadata.x + 1) % this._config.columns.length === 0;\n        td.classList.toggle(\"psp-header-border\", needs_border);\n        td.classList.toggle(\"psp-header-group\", false);\n        td.classList.toggle(\"psp-header-leaf\", true);\n        td.classList.toggle(\n            \"psp-header-corner\",\n            typeof metadata.x === \"undefined\"\n        );\n        td.classList.toggle(\"psp-header-sort-asc\", !!sort && sort[1] === \"asc\");\n        td.classList.toggle(\n            \"psp-header-sort-desc\",\n            !!sort && sort[1] === \"desc\"\n        );\n        td.classList.toggle(\n            \"psp-header-sort-col-asc\",\n            !!sort && sort[1] === \"col asc\"\n        );\n        td.classList.toggle(\n            \"psp-header-sort-col-desc\",\n            !!sort && sort[1] === \"col desc\"\n        );\n    }\n}\n```\n\nAccompanying CSS:\n\n```css\n.psp-header-border {\n    border-right: 1px solid #ddd;\n}\n.psp-header-border:last-child {\n    border-right-width: 0px;\n}\n.psp-header-sort-desc:after {\n    font-family: \"Material Icons\";\n    font-size: 10px;\n    content: \"arrow_downward\"\n}\n.psp-header-sort-asc:after {\n    font-family: \"Material Icons\";\n    font-size: 10px;\n    content: \"arrow_upward\"\n}\n.psp-header-sort-col-desc:after {\n    font-family: \"Material Icons\";\n    font-size: 10px;\n    content: \"arrow_back\"\n}\n.psp-header-sort-col-asc:after {\n    font-family: \"Material Icons\";\n    font-size: 10px;\n    content: \"arrow_forward\"\n}\n```\n\nGroup headers, e.g. `column_headers` 0 - (N - 1).\n\n```javascript\nfunction groupHeaderStyleListener(regularTable) {\n    const header_depth = regularTable._view_cache.config.row_pivots.length - 1;\n    for (const td of regularTable.querySelectorAll(\n        \"thead tr:not(:last-child) th\"\n    )) {\n        const metadata = regularTable.getMeta(td);\n        let needs_border =\n            metadata.row_header_x === header_depth || metadata.x >= 0;\n        td.classList.toggle(\"psp-header-group\", true);\n        td.classList.toggle(\"psp-header-leaf\", false);\n        td.classList.toggle(\"psp-header-border\", needs_border);\n    }\n}\n```\n\n_Tree-like_ renderer for `row_headers`, which also draws expand/collapse\nbuttons.\n\n```javascript\nfunction treeStyleListener(regularTable) {\n    for (const td of regularTable.querySelectorAll(\"tbody th\")) {\n        const metadata = regularTable.getMeta(td);\n        const is_not_empty =\n            !!metadata.value && metadata.value.toString().trim().length > 0;\n        const is_leaf = metadata.row_header_x >= this._config.row_pivots.length;\n        const next = regularTable.getMeta({\n            dx: 0,\n            dy: metadata.y - metadata.y0 + 1,\n        });\n        const is_collapse =\n            next &&\n            next.row_header &&\n            typeof next.row_header[metadata.row_header_x + 1] !== \"undefined\";\n        td.classList.toggle(\"psp-tree-label\", is_not_empty && !is_leaf);\n        td.classList.toggle(\n            \"psp-tree-label-expand\",\n            is_not_empty && !is_leaf && !is_collapse\n        );\n        td.classList.toggle(\n            \"psp-tree-label-collapse\",\n            is_not_empty && !is_leaf && is_collapse\n        );\n        td.classList.toggle(\"psp-tree-leaf\", is_not_empty && is_leaf);\n    }\n}\n```\n\nCSS:\n\n```css\ntbody th:last-of-type {\n    border-right: 1px solid #ddd;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\ntbody th:empty {\n    background-image: linear-gradient(to right, transparent 9px, #eee 10px, transparent 11px);\n    background-repeat: no-repeat;\n    min-width: 20px;\n    max-width: 20px;\n    pointer-events: none;\n}\n.psp-tree-label {\n    max-width: 0px;\n    min-width: 0px;\n}\n.psp-tree-label:before {\n    color: #ccc;\n    font-family: \"Material Icons\";\n    padding-right: 11px;\n    vertical-align: -1px;\n}\n.psp-tree-label-expand:before {\n    content: \"add\"\n}\n.psp-tree-label-collapse:before {\n    content: \"remove\"\n}\n.psp-tree-label:hover:before {\n    color: #1078d1;\n    text-shadow: 0px 0px 5px #1078d1;\n}\ntr:hover th.psp-tree-leaf, tr:hover th.psp-tree-label  {\n    background: #eee;\n}\n.psp-tree-leaf {\n    padding-left: 24px;\n}\n```\n\nType-specific styles, +/- color and alignment.\n\n```javascript\nfunction get_psp_type(metadata) {\n    if (metadata.x >= 0) {\n        const column_path = this._column_paths[metadata.x];\n        const column_path_parts = column_path.split(\"|\");\n        return this._schema[column_path_parts[column_path_parts.length - 1]];\n    } else {\n        const column_path = this._config.row_pivots[metadata.row_header_x - 1];\n        return this._table_schema[column_path];\n    }\n}\n\nfunction typeStyleListener(regularTable) {\n    for (const td of regularTable.querySelectorAll(\n        \"td, tbody th, thead tr:last-child th\"\n    )) {\n        const metadata = regularTable.getMeta(td);\n        let type = get_psp_type.call(this, metadata);\n        const is_numeric = type === \"integer\" || type === \"float\";\n        const float_val = is_numeric && parseFloat(metadata.value);\n        td.classList.toggle(\"psp-align-right\", is_numeric);\n        td.classList.toggle(\"psp-align-left\", !is_numeric);\n        td.classList.toggle(\"psp-positive\", float_val > 0);\n        td.classList.toggle(\"psp-negative\", float_val < 0);\n    }\n}\n```\n\nCSS:\n\n```css\n.psp-align-right {\n    text-align: right;\n}\n.psp-align-left {\n    text-align: left;\n}\n.psp-positive:not(:focus) {\n    color: #1078d1;\n}\n.psp-negative:not(:focus) {\n    color: #de3838;\n}\n```\n\n## Sort Interaction\n\nWhen the sort handler is invoked, a new `perspective.View` must be created with\nthe specified `sort` property.  However, we don't want to mutate this property\nwithin the sort handler, since the original view will be specifie as a\nconstructor paramater to the `model` object in `createModel()`;  instead we\ncan emit the event `\"regular-table-psp-sort\"` which we can then handle in the\nsame scope that declares this `regular-table`.\n\n```javascript\nasync function sortHandler(regularTable, event, target) {\n    const meta = regularTable.getMeta(target);\n    const column_name = meta.column_header[meta.column_header.length - 1];\n    const sort_method = event.shiftKey ? append_sort : override_sort;\n    const sort = sort_method.call(this, column_name);\n    regularTable.dispatchEvent(\n        new CustomEvent(\"regular-table-psp-sort\", {detail: {sort}})\n    );\n}\n```\n\n```javascript\nfunction append_sort(column_name) {\n    const sort = [];\n    let found = false;\n    for (const sort_term of this._config.sort) {\n        const [_column_name, _sort_dir] = sort_term;\n        if (_column_name === column_name) {\n            found = true;\n            const term = create_sort.call(this, column_name, _sort_dir);\n            if (term) {\n                sort.push(term);\n            }\n        } else {\n            sort.push(sort_term);\n        }\n    }\n    if (!found) {\n        sort.push([column_name, \"desc\"]);\n    }\n    return sort;\n}\n\nfunction override_sort(column_name) {\n    for (const [_column_name, _sort_dir] of this._config.sort) {\n        if (_column_name === column_name) {\n            const sort = create_sort.call(this, column_name, _sort_dir);\n            return sort ? [sort] : [];\n        }\n    }\n    return [[column_name, \"desc\"]];\n}\n\nfunction create_sort(column_name, sort_dir) {\n    const is_col_sortable = this._config.column_pivots.length > 0;\n    const order = is_col_sortable ? ROW_COL_SORT_ORDER : ROW_SORT_ORDER;\n    const inc_sort_dir = sort_dir ? order[sort_dir] : \"desc\";\n    if (inc_sort_dir) {\n        return [column_name, inc_sort_dir];\n    }\n}\n\nconst ROW_SORT_ORDER = {desc: \"asc\", asc: undefined};\nconst ROW_COL_SORT_ORDER = {\n    desc: \"asc\",\n    asc: \"col desc\",\n    \"col desc\": \"col asc\",\n    \"col asc\": undefined,\n};\n```\n\n## Expand/Collapse Interaction\n\n```javascript\nasync function expandCollapseHandler(regularTable, event, target) {\n    const meta = regularTable.getMeta(target);\n    const is_collapse = target.classList.contains(\"psp-tree-label-collapse\");\n    if (event.shiftKey && is_collapse) {\n        this._view.set_depth(\n            meta.row_header.filter((x) => x !== undefined).length - 2\n        );\n    } else if (event.shiftKey) {\n        this._view.set_depth(\n            meta.row_header.filter((x) => x !== undefined).length - 1\n        );\n    } else if (is_collapse) {\n        this._view.collapse(meta.y);\n    } else {\n        this._view.expand(meta.y);\n    }\n    this._num_rows = await this._view.num_rows();\n    this._num_columns = await this._view.num_columns();\n    regularTable.draw();\n}\n\nfunction mousedownListener(regularTable, event) {\n    let target = event.target;\n    while (target.tagName !== \"TD\" && target.tagName !== \"TH\") {\n        target = target.parentElement;\n        if (!regularTable.contains(target)) {\n            return;\n        }\n    }\n\n    if (target.classList.contains(\"psp-tree-label\") && event.offsetX < 26) {\n        expandCollapseHandler.call(this, regularTable, event, target);\n        event.handled = true;\n    } else if (\n        target.classList.contains(\"psp-header-leaf\") &&\n        !target.classList.contains(\"psp-header-corner\")\n    ) {\n        sortHandler.call(this, regularTable, event, target);\n        event.handled = true;\n    }\n}\n```\n\n## Virtual Data Model\n\nType specific formatters.\n\n```javascript\nconst FORMATTERS = {\n    datetime: Intl.DateTimeFormat(\"en-us\", {\n        week: \"numeric\",\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\",\n    }),\n    date: Intl.DateTimeFormat(\"en-us\"),\n    integer: Intl.NumberFormat(\"en-us\"),\n    float: new Intl.NumberFormat(\"en-us\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    }),\n};\n\nexport const formatters = FORMATTERS;\n\nfunction _format(parts, val, use_table_schema = false) {\n    if (val === null) {\n        return \"-\";\n    }\n    const title = parts[parts.length - 1];\n    const type =\n        (use_table_schema && this._table_schema[title]) ||\n        this._schema[title] ||\n        \"string\";\n    return FORMATTERS[type] ? FORMATTERS[type].format(val) : val;\n}\n\nfunction formatStyleListener(regularTable) {\n    regularTable.invalidate();\n    for (const td of regularTable.querySelectorAll(\"table tbody td\")) {\n        const metadata = regularTable.getMeta(td);\n        let type = get_psp_type.call(this, metadata);\n        td.innerHTML = FORMATTERS[type]\n            ? FORMATTERS[type].format(metadata.value)\n            : td.textContent;\n    }\n}\n```\n\nWraps Perspective's default `__ROW_PATH__` format to output a _tree-like_\n`row_headers`.\n\n```javascript\nfunction* _tree_header(paths = [], row_headers) {\n    for (let path of paths) {\n        path = [\"TOTAL\", ...path];\n        const last = path[path.length - 1];\n        path = path.slice(0, path.length - 1).fill(\"\");\n        const formatted = _format.call(\n            this,\n            [row_headers[path.length - 1]],\n            last,\n            true\n        );\n        path = path.concat({toString: () => formatted});\n        path.length = row_headers.length + 1;\n        yield path;\n    }\n}\n```\n\nThe Virtual Data Model - this should really become a method of Perspective, like\n`to_slice()`?\n\n```javascript\nasync function dataListener(x0, y0, x1, y1) {\n    let columns = {};\n    if (x1 - x0 > 0 && y1 - y0 > 0) {\n        columns = await this._view.to_columns({\n            start_row: y0,\n            start_col: x0,\n            end_row: y1,\n            end_col: x1,\n            id: true,\n        });\n        this._ids = columns.__ID__;\n    }\n\n    const data = [];\n    const column_headers = [];\n    for (const path of this._column_paths.slice(x0, x1)) {\n        const path_parts = path.split(\"|\");\n        const column = columns[path] || new Array(y1 - y0).fill(null);\n        data.push(column);\n        column_headers.push(path_parts);\n    }\n\n    return {\n        num_rows: this._num_rows,\n        num_columns: this._column_paths.length,\n        row_headers: Array.from(\n            _tree_header.call(\n                this,\n                columns.__ROW_PATH__,\n                this._config.row_pivots\n            )\n        ),\n        column_headers,\n        data,\n    };\n}\n```\n\nCreate a model state object.  This object will memoize everything that a\n`regular-table` will need in one place, minimizing recalculation later when\na re-render is requested.  Because some operations like _sorting_ can actually\ninstantiate a view (and this call `createModel()` themselves), we must\nmemoize both the `Table` and `View` objects.\n\n```javascript\nexport async function createModel(regular, table, view, extend = {}) {\n    const config = await view.get_config();\n    const [\n        table_schema,\n        table_computed_schema,\n        num_rows,\n        schema,\n        computed_schema,\n        column_paths,\n    ] = await Promise.all([\n        table.schema(),\n        table.computed_schema(config.computed_columns),\n        view.num_rows(),\n        view.schema(),\n        view.computed_schema(),\n        view.column_paths(),\n    ]);\n\n    const model = Object.assign(extend, {\n        _view: view,\n        _table: table,\n        _table_schema: {...table_schema, ...table_computed_schema},\n        _config: config,\n        _num_rows: num_rows,\n        _schema: {...schema, ...computed_schema},\n        _ids: [],\n        _column_paths: column_paths.filter((path) => {\n            return path !== \"__ROW_PATH__\" && path !== \"__ID__\";\n        }),\n    });\n\n    regular.setDataListener(dataListener.bind(model));\n    return model;\n}\n```\n\n```javascript\nexport async function configureRegularTable(regular, model) {\n    regular.addStyleListener(formatStyleListener.bind(model, regular));\n    regular.addStyleListener(typeStyleListener.bind(model, regular));\n    regular.addStyleListener(treeStyleListener.bind(model, regular));\n    regular.addStyleListener(groupHeaderStyleListener.bind(model, regular));\n    regular.addStyleListener(columnHeaderStyleListener.bind(model, regular));\n    regular.addEventListener(\n        \"mousedown\",\n        mousedownListener.bind(model, regular)\n    );\n    await regular.draw();\n}\n```\n\n## Perspective\n\n```html\n<script type=\"module\">\n    import {createModel, configureRegularTable} from \"/dist/examples/perspective.js\";\n    const URL = \"/node_modules/superstore-arrow/superstore.arrow\";\n\n    const datasource = async () => {\n        const request = fetch(URL);\n        const worker = window.perspective.worker();\n        const response = await request;\n        const buffer = await response.arrayBuffer();\n        return worker.table(buffer);\n    };\n\n    window.addEventListener(\"load\", async function () {\n        const table = await datasource();\n        const view = table.view({\n            row_pivots: [\"Region\", \"State\", \"City\"],\n            column_pivots: [\"Category\", \"Sub-Category\"],\n            columns: [\"Sales\", \"Profit\"],\n        });\n\n        const regular = document.getElementsByTagName(\"regular-table\")[0];\n        const model = await createModel(regular, table, view);\n        await configureRegularTable(regular, model);\n\n        regular.addEventListener(\"regular-table-psp-sort\", async (event) => {\n            model._view.delete();\n            const view = model._table.view({...model._config, sort: event.detail.sort});\n            await createModel(regular, model._table, view, model);\n            await regular.draw();\n        });\n    });\n</script>\n```\n\n## CSS\n\n```css\nhtml,\nbody {\n    overflow: hidden;\n}\n\nregular-table table {\n    user-select: none;\n}\n```\n\n## Appendix (Dependencies)\n\n```html\n<script src=\"/node_modules/@finos/perspective/dist/umd/perspective.js\"></script>\n<script src=\"/dist/umd/regular-table.js\"></script>\n<link rel='stylesheet' href=\"/dist/css/material.css\">\n```\n\n"]}